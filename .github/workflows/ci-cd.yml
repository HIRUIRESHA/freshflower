name: CI/CD Pipeline for Fresh Flower

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 12345
          MYSQL_DATABASE: fresh_flower_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -p12345"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -P3306 -uroot -p12345 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... attempt $i"
            sleep 2
          done

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -p12345 -e "CREATE DATABASE IF NOT EXISTS fresh_flower_db;"
          mysql -h 127.0.0.1 -P 3306 -u root -p12345 -e "SHOW DATABASES;"

      # Install Chrome for Selenium tests
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Run unit tests only (exclude Selenium tests)
        run: |
          mvn clean test -Dspring.profiles.active=test -Dtest=!*Selenium*,!*IT*,!*ITest*,!*SignupTest*,!*LoginTest*
        env:
          SPRING_PROFILES_ACTIVE: test

      - name: Run integration tests (excluding Selenium UI tests)
        run: |
          mvn verify -Dspring.profiles.active=ci -Dit.test=!*Selenium*,!*SignupTest*,!*LoginTest*
        env:
          SPRING_PROFILES_ACTIVE: ci
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/fresh_flower_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 12345

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: |
            target/surefire-reports/
            target/cucumber-reports/
          retention-days: 30

  # Separate job for Selenium tests to avoid Chrome conflicts
  selenium-tests:
    name: Selenium UI Tests
    runs-on: ubuntu-latest
    needs: backend-tests

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 12345
          MYSQL_DATABASE: fresh_flower_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -p12345"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -P3306 -uroot -p12345 --silent; then
              echo "MySQL is ready!"
              break
            fi
            sleep 2
          done

      - name: Run Selenium tests in isolation
        run: |
          mvn test -Dtest=SignupTest,LoginTest -Dspring.profiles.active=ci -Dselenium.headless=true
        env:
          SPRING_PROFILES_ACTIVE: ci
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/fresh_flower_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 12345
          # Frontend URL for Selenium tests - use a placeholder since React app isn't deployed
          FRONTEND_URL: http://localhost:3000

      - name: Upload Selenium test reports
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-reports
          path: target/surefire-reports/
          retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'freshflower'
          path: '.'
          format: 'HTML'
          out: 'reports'

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
          retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [backend-tests, security-scan]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build application JAR
        run: mvn clean package -DskipTests

      - name: Display build info
        run: |
          echo "Build completed successfully!"
          ls -la target/*.jar

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: freshflower-app
          path: target/*.jar
          retention-days: 7