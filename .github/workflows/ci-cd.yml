name: CI/CD Pipeline for Fresh Flower

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: fresh_flower_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Create test configuration
        run: |
          mkdir -p src/test/resources
          cat > src/test/resources/test-config.properties << EOF
          # Frontend URL (for Selenium tests)
          frontend.url=http://localhost:5173
          
          # Backend URL
          backend.url=http://localhost:8080
          
          # Test database configuration
          spring.datasource.url=jdbc:mysql://localhost:3306/fresh_flower_db
          spring.datasource.username=root
          spring.datasource.password=root
          
          # Test user credentials
          test.user.email=test@example.com
          test.user.password=TestPassword123
          test.user.fullname=Test User
          
          # Selenium settings
          selenium.timeout.seconds=30
          selenium.headless=true
          EOF

      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
            sleep 1
          done

      - name: Create test database schema
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS fresh_flower_db;"

      - name: Build and run unit tests
        run: |
          mvn clean compile test -DskipITs=true
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/fresh_flower_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

      - name: Run integration tests (Cucumber)
        run: |
          mvn verify -Dtest=CucumberTestRunner -DskipUnitTests=true
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/fresh_flower_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

      - name: Generate test reports
        run: |
          mvn surefire-report:report-only

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports/
            target/cucumber-reports/
          retention-days: 30

  selenium-tests:
    name: Selenium UI Tests
    runs-on: ubuntu-latest
    needs: test

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: fresh_flower_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Chrome for Selenium
        uses: browser-actions/setup-chrome@v1

      - name: Install ChromeDriver
        run: |
          chrome_version=$(google-chrome --version | awk '{print $3}')
          chrome_major_version=$(echo $chrome_version | cut -d'.' -f1)
          wget -N https://storage.googleapis.com/chrome-for-testing-public/$chrome_major_version.0.0/linux64/chromedriver-linux64.zip
          unzip -o chromedriver-linux64.zip -d /usr/local/bin/
          chmod +x /usr/local/bin/chromedriver-linux64/chromedriver
          ln -sf /usr/local/bin/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver

      - name: Create Selenium test configuration
        run: |
          mkdir -p src/test/resources
          cat > src/test/resources/test-config.properties << EOF
          # Frontend URL (React app - will be started later)
          frontend.url=http://localhost:3000
          
          # Backend URL (Spring Boot app)
          backend.url=http://localhost:8080
          
          # Test database
          spring.datasource.url=jdbc:mysql://localhost:3306/fresh_flower_db
          spring.datasource.username=root
          spring.datasource.password=root
          
          # Test user
          test.user.email=selenium@example.com
          test.user.password=SeleniumTest123
          test.user.fullname=Selenium User
          
          # Selenium settings
          selenium.timeout.seconds=30
          selenium.headless=true
          EOF

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
            sleep 1
          done

      - name: Start backend application
        run: |
          mvn spring-boot:run &
          echo $! > spring-boot.pid
          sleep 60  # Wait for app to start

      - name: Run Selenium tests
        run: |
          mvn test -Dtest=LoginTest,SignupTest -DskipUnitTests=true
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/fresh_flower_db
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

      - name: Stop backend application
        run: |
          if [ -f spring-boot.pid ]; then
            kill $(cat spring-boot.pid) || true
          fi

      - name: Upload Selenium reports
        uses: actions/upload-artifact@v4
        with:
          name: selenium-reports
          path: target/surefire-reports/
          retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'freshflower'
          path: '.'
          format: 'HTML'
          out: 'reports'

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
          retention-days: 30

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, selenium-tests, security-scan]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build application JAR
        run: mvn clean package -DskipTests

      - name: Display build info
        run: |
          echo "Build completed successfully!"
          ls -la target/*.jar

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: freshflower-app
          path: target/*.jar
          retention-days: 7